/* Form layout that never overflows the 700px container */

/* 1) Responsive rows: auto-fit as many columns as fit, then wrap */
.row {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: var(--space-3, 12px);
}

/* 2) Inputs/selects/areas always fill their column */
.field input,
.field select,
.field textarea {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

/* 3) Don’t let inner blocks force the card wider */
.card,
.grid,
.kv,
.field {
  min-width: 0;
}
.field input,
.field textarea {
  min-width: 0;
}

/* 4) Make sure the card itself can’t bleed */
.card {
  overflow: hidden;
}

/* 5) Global box-sizing for sanity (safe to add once) */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* Compact checkbox rows so they don't create big empty spaces */
.toggle-label {
  display: flex;
  align-items: center;
  gap: 8px;
  font-weight: 600; /* keep label readable */
  margin: 4px 0;
}

/* Small, tidy checkboxes */
.toggle-label input[type="checkbox"] {
  width: 16px;
  height: 16px;
  min-width: 16px;
  min-height: 16px;
  accent-color: #16a34a; /* native green check */
}

/* Indent the hint that follows a toggle label (but only that case) */
.toggle-label + .unit-note {
  margin-left: 24px;
  display: block; /* ensure it wraps under the label line */
  margin-top: 2px;
}
/* Two-up layout even on smaller phones for key rows */
.row.row--compact {
  grid-template-columns: 1fr 1fr; /* exactly two columns */
  gap: 10px;
}
.row.row--compact .field input {
  width: 100%;
}
@media (max-width: 360px) {
  .row.row--compact {
    grid-template-columns: 1fr 1fr;
    gap: 8px;
  }
}
